buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url='https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

repositories {
    maven {
        url "http://harleyoconnor.com/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

ext.configFile = file "gradle.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version}-${config.mod_version}"
group = config.package_group
archivesBaseName = config.mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: config.mc_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=" + config.mod_id + ".mixins.json"

            mods {
                suggestionproviderfix {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=" + config.mod_id + ".mixins.json"

            mods {
                suggestionproviderfix {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${config.mod_id}.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"

    annotationProcessor "org.spongepowered:mixin:0.8.2:processor"

    // This is here so we have some modded items to test on.
    implementation fg.deobf("com.ferreusveritas.dynamictrees:DynamicTrees-1.16.5:0.2.0")
}

jar {
    manifest {
        attributes([
            "Specification-Title": config.mod_id,
            "Specification-Vendor": "Harley O'Connor",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": version,
            "Implementation-Vendor": "Harley O'Connor",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "${config.mod_id}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                url = 'https://github.com/Harleyoc1/SuggestionProviderFix'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id = 'harleyoconnor'
                        name = 'Harley O\'Connor'
                        email = 'harleyoc1@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Harleyoc1/SuggestionProviderFix.git'
                    developerConnection = 'scm:git:ssh://github.com/Harleyoc1/SuggestionProviderFix.git'
                    url = 'https://github.com/Harleyoc1/SuggestionProviderFix'
                }
            }
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
